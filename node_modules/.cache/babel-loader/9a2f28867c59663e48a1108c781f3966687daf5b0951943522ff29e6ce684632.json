{"ast":null,"code":"var _jsxFileName = \"/home/antonio/repos/projectMemoryCardTOP/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Card from \"./components/card\";\nimport Header from \"./components/Header\";\nimport Points from \"./components/points\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [randomImages, setRandomImages] = useState(Array.from({\n    length: 8\n  }, () => ({\n    url: \"\",\n    clicked: false\n  })));\n  const [currentPoints, setCurrentPoints] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n  const handlePointsUpdate = newPoints => {\n    setCurrentPoints(newPoints);\n    if (newPoints > bestScore) {\n      setBestScore(newPoints);\n    }\n  };\n  useEffect(() => {\n    async function fetchImages() {\n      const urls = [];\n      for (let i = 0; i < 8; i++) {\n        let randomPoke = Math.round(Math.random() * 899);\n        const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${randomPoke}/`);\n        const data = await response.json();\n        urls.push({\n          url: data.sprites.front_default,\n          clicked: false\n        });\n      }\n      setRandomImages(urls);\n    }\n    fetchImages();\n  }, []);\n  const handleCardClick = index => {\n    if (randomImages[index].clicked) {\n      //if the clicked element property is already true game endend\n      const newImages = randomImages.map(image => ({\n        ...image,\n        clicked: false\n      }));\n      setRandomImages(newImages);\n      setCurrentPoints(0);\n      console.log(\"you lose\");\n    } else {\n      //if the clicked element property is not true game continue\n      const newImages = randomImages.map((image, i) => {\n        //map over randomImages to find the clicked element and change his clicked property to true\n        if (i === index) {\n          return {\n            ...image,\n            clicked: true\n          };\n        }\n        return image;\n      });\n      const shuffledImages = [...newImages].sort(() => Math.random() - 0.5);\n      setRandomImages(shuffledImages);\n      handlePointsUpdate(currentPoints + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Points, {\n      currentPoints: currentPoints,\n      bestScore: bestScore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CardContainer\",\n      children: randomImages.map((image, index) => /*#__PURE__*/_jsxDEV(Card, {\n        image: image.url,\n        clicked: image.clicked,\n        onClick: () => handleCardClick(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lfa4NKRwS+47645q+COLvXKqM3k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Card","Header","Points","jsxDEV","_jsxDEV","App","_s","randomImages","setRandomImages","Array","from","length","url","clicked","currentPoints","setCurrentPoints","bestScore","setBestScore","handlePointsUpdate","newPoints","fetchImages","urls","i","randomPoke","Math","round","random","response","fetch","data","json","push","sprites","front_default","handleCardClick","index","newImages","map","image","console","log","shuffledImages","sort","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/antonio/repos/projectMemoryCardTOP/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Card from \"./components/card\";\nimport Header from \"./components/Header\";\nimport Points from \"./components/points\";\n\nfunction App() {\n  const [randomImages, setRandomImages] = useState(\n    Array.from({ length: 8 }, () => ({\n      url: \"\",\n      clicked: false,\n    }))\n  );\n  const [currentPoints, setCurrentPoints] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n\n  const handlePointsUpdate = (newPoints) => {\n    setCurrentPoints(newPoints);\n    if (newPoints > bestScore) {\n      setBestScore(newPoints);\n    }\n  };\n\n  useEffect(() => {\n    async function fetchImages() {\n      const urls = [];\n      for (let i = 0; i < 8; i++) {\n        let randomPoke = Math.round(Math.random() * 899);\n        const response = await fetch(\n          `https://pokeapi.co/api/v2/pokemon/${randomPoke}/`\n        );\n        const data = await response.json();\n        urls.push({ url: data.sprites.front_default, clicked: false });\n      }\n      setRandomImages(urls);\n    }\n\n    fetchImages();\n  }, []);\n\n  const handleCardClick = (index) => {\n    if (randomImages[index].clicked) {\n      //if the clicked element property is already true game endend\n      const newImages = randomImages.map((image) => ({\n        ...image,\n        clicked: false,\n      }));\n      setRandomImages(newImages);\n      setCurrentPoints(0);\n      console.log(\"you lose\");\n    } else {\n      //if the clicked element property is not true game continue\n      const newImages = randomImages.map((image, i) => {\n        //map over randomImages to find the clicked element and change his clicked property to true\n        if (i === index) {\n          return {\n            ...image,\n            clicked: true,\n          };\n        }\n        return image;\n      });\n      const shuffledImages = [...newImages].sort(() => Math.random() - 0.5);\n      setRandomImages(shuffledImages);\n      handlePointsUpdate(currentPoints + 1);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Points currentPoints={currentPoints} bestScore={bestScore} />\n\n      <div className=\"CardContainer\">\n        {randomImages.map((image, index) => (\n          <Card\n            key={index}\n            image={image.url}\n            clicked={image.clicked}\n            onClick={() => handleCardClick(index)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}