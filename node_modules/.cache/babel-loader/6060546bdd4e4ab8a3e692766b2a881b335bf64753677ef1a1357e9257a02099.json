{"ast":null,"code":"import _toConsumableArray from\"/home/antonio/repos/projectMemoryCardTOP/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/home/antonio/repos/projectMemoryCardTOP/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/antonio/repos/projectMemoryCardTOP/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/home/antonio/repos/projectMemoryCardTOP/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/antonio/repos/projectMemoryCardTOP/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{useState,useEffect}from\"react\";import Card from\"./components/card\";import Header from\"./components/Header\";import Points from\"./components/points\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var fetchImages=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(setRandomImages){var urls,i,randomPoke,response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:urls=[];i=0;case 2:if(!(i<8)){_context.next=14;break;}randomPoke=Math.round(Math.random()*899);_context.next=6;return fetch(\"https://pokeapi.co/api/v2/pokemon/\".concat(randomPoke,\"/\"));case 6:response=_context.sent;_context.next=9;return response.json();case 9:data=_context.sent;urls.push({url:data.sprites.front_default,clicked:false});case 11:i++;_context.next=2;break;case 14:setRandomImages(urls);case 15:case\"end\":return _context.stop();}},_callee);}));return function fetchImages(_x){return _ref.apply(this,arguments);};}();function App(){var _useState=useState(Array.from({length:8},function(){return{url:\"\",clicked:false};})),_useState2=_slicedToArray(_useState,2),randomImages=_useState2[0],setRandomImages=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),currentPoints=_useState4[0],setCurrentPoints=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),bestScore=_useState6[0],setBestScore=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),consecutiveWins=_useState8[0],setConsecutiveWins=_useState8[1];var _useState9=useState(\"Dont click twice on the same pokemon!\"),_useState10=_slicedToArray(_useState9,2),info=_useState10[0],setInfo=_useState10[1];var handlePointsUpdate=function handlePointsUpdate(newPoints){setCurrentPoints(newPoints);if(newPoints>bestScore){setBestScore(newPoints);}};useEffect(function(){fetchImages(setRandomImages);},[]);var handleCardClick=function handleCardClick(index){if(randomImages[index].clicked){//if the clicked element property is already true game endend\nvar newImages=randomImages.map(function(image){return _objectSpread(_objectSpread({},image),{},{clicked:false});});setRandomImages(newImages);setCurrentPoints(0);setConsecutiveWins(0);setInfo(\"Same pokemon twice, you lose. Click again to start a new game.\");}else{//if the clicked element property is not true game continue\nvar _newImages=randomImages.map(function(image,i){//map over randomImages to find the clicked element and change his clicked property to true\nif(i===index){return _objectSpread(_objectSpread({},image),{},{clicked:true});}return image;});var shuffledImages=_toConsumableArray(_newImages).sort(function(){return Math.random()-0.5;});setRandomImages(shuffledImages);handlePointsUpdate(currentPoints+1);if(currentPoints+1===8){setInfo(\"Congratulations, you Win. Play with another set of pokemon!\");fetchImages(setRandomImages);setCurrentPoints(0);var addConsecutive=consecutiveWins+1;setConsecutiveWins(addConsecutive);}else{setInfo(\"Good Job! Click another Pokemon!\");}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Header,{info:info}),/*#__PURE__*/_jsx(Points,{currentPoints:currentPoints,bestScore:bestScore,consecutiveWins:consecutiveWins}),/*#__PURE__*/_jsx(\"div\",{className:\"CardContainer\",children:randomImages.map(function(image,index){return/*#__PURE__*/_jsx(Card,{image:image.url,clicked:image.clicked,onClick:function onClick(){return handleCardClick(index);}},index);})})]});}export default App;","map":{"version":3,"names":["useState","useEffect","Card","Header","Points","jsx","_jsx","jsxs","_jsxs","fetchImages","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","setRandomImages","urls","i","randomPoke","response","data","wrap","_callee$","_context","prev","next","Math","round","random","fetch","concat","sent","json","push","url","sprites","front_default","clicked","stop","_x","apply","arguments","App","_useState","Array","from","length","_useState2","_slicedToArray","randomImages","_useState3","_useState4","currentPoints","setCurrentPoints","_useState5","_useState6","bestScore","setBestScore","_useState7","_useState8","consecutiveWins","setConsecutiveWins","_useState9","_useState10","info","setInfo","handlePointsUpdate","newPoints","handleCardClick","index","newImages","map","image","_objectSpread","shuffledImages","_toConsumableArray","sort","addConsecutive","className","children","onClick"],"sources":["/home/antonio/repos/projectMemoryCardTOP/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Card from \"./components/card\";\nimport Header from \"./components/Header\";\nimport Points from \"./components/points\";\n\nconst fetchImages = async (setRandomImages) => {\n  const urls = [];\n  for (let i = 0; i < 8; i++) {\n    let randomPoke = Math.round(Math.random() * 899);\n    const response = await fetch(\n      `https://pokeapi.co/api/v2/pokemon/${randomPoke}/`\n    );\n    const data = await response.json();\n    urls.push({ url: data.sprites.front_default, clicked: false });\n  }\n  setRandomImages(urls);\n};\n\nfunction App() {\n  const [randomImages, setRandomImages] = useState(\n    Array.from({ length: 8 }, () => ({\n      url: \"\",\n      clicked: false,\n    }))\n  );\n  const [currentPoints, setCurrentPoints] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n  const [consecutiveWins, setConsecutiveWins] = useState(0);\n  const [info, setInfo] = useState(\"Dont click twice on the same pokemon!\");\n\n  const handlePointsUpdate = (newPoints) => {\n    setCurrentPoints(newPoints);\n    if (newPoints > bestScore) {\n      setBestScore(newPoints);\n    }\n  };\n\n  useEffect(() => {\n    fetchImages(setRandomImages);\n  }, []);\n\n  const handleCardClick = (index) => {\n    if (randomImages[index].clicked) {\n      //if the clicked element property is already true game endend\n      const newImages = randomImages.map((image) => ({\n        ...image,\n        clicked: false,\n      }));\n      setRandomImages(newImages);\n      setCurrentPoints(0);\n      setConsecutiveWins(0);\n      setInfo(\"Same pokemon twice, you lose. Click again to start a new game.\");\n    } else {\n      //if the clicked element property is not true game continue\n      const newImages = randomImages.map((image, i) => {\n        //map over randomImages to find the clicked element and change his clicked property to true\n        if (i === index) {\n          return {\n            ...image,\n            clicked: true,\n          };\n        }\n        return image;\n      });\n      const shuffledImages = [...newImages].sort(() => Math.random() - 0.5);\n      setRandomImages(shuffledImages);\n      handlePointsUpdate(currentPoints + 1);\n      if (currentPoints + 1 === 8) {\n        setInfo(\"Congratulations, you Win. Play with another set of pokemon!\");\n        fetchImages(setRandomImages);\n        setCurrentPoints(0);\n        let addConsecutive = consecutiveWins + 1;\n        setConsecutiveWins(addConsecutive);\n      } else {\n        setInfo(\"Good Job! Click another Pokemon!\");\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Header info={info} />\n      <Points\n        currentPoints={currentPoints}\n        bestScore={bestScore}\n        consecutiveWins={consecutiveWins}\n      />\n\n      <div className=\"CardContainer\">\n        {randomImages.map((image, index) => (\n          <Card\n            key={index}\n            image={image.url}\n            clicked={image.clicked}\n            onClick={() => handleCardClick(index)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}